<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ach_icon_selected</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menumanager.menuEnabled = false;
menu_closed = false;
menu_alpha = 0;

selected_animation = false;
anim_scale = 1;


equip_index = 0;
equip_index_max = sprite_get_number(spr_style_equip)-1;

back_selected = false;
back_pressed = false;

buttons_selected = true;
buttons_pressed = false;

pages_selected = false;
page_direction = 1;
pages_pressed = false;

can_pos = true;
pos_delay = 6;
pos = 0;
last_pos = 0;
row = 5;
column = 3;
grid_max = (row*column);
row_end = row-1;

page_mult = 0;
page_max = ceil(achievement_count/row)-3;
page_offset = 0;

scroll_ind_y_lerp = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_pos = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if menumanager.menu_level != 6 {menu_closed = true;}

equip_index++;
page_offset = (page_mult*row);

if !menu_closed
{
    var old_pos = pos;
    var new_pos = pos;
    if can_pos
    {
        if inputmanager.left_held and !back_selected
        {
            if (pos % row) != 0 {new_pos--; can_pos = false;}
        }
        
        if inputmanager.right_held and !back_selected
        {
            if (pos % row) != row-1 {new_pos++; can_pos = false;}
        }
        
        if inputmanager.up_held //and last_dir != posdir.up
        {
            if pos &lt; row and page_mult &gt; 0
            {
                audio_play_sound(snd_tick, 0, false);
                page_mult--;
                selected_animation = true;
                can_pos = false;
            }
            else
            {
                var _result = (new_pos - row)
                if _result &gt;= 0 {new_pos = _result; can_pos = false;}
            }
        
            /*if back_selected
            {
                //pos = last_pos;
                back_selected = false;
                can_pos = false;
                audio_play_sound(snd_tick, 0, false);
            }
            else
            {
                var _result = (new_pos - row)
                if _result &gt;= 0 {new_pos = _result; can_pos = false;}
            }*/
        }
        
        if inputmanager.down_held //and last_dir != posdir.down
        {
            if pos &gt;= (grid_max-row) and page_mult &lt; page_max
            {
                //back_selected = true;
                audio_play_sound(snd_tick, 0, false);
                page_mult++;
                selected_animation = true;
                can_pos = false;
                //last_pos = pos;
            }
            else
            {
                var _result = (new_pos + row)
                if _result &lt; grid_max {new_pos = _result; can_pos = false;}
            }
        }
    }
    
    var _im = inputmanager;
    var release_any = _im.left_released or _im.right_released
        or _im.up_released or _im.down_released;
        
    var held_any = _im.left_held or _im.right_held
        or _im.up_held or _im.down_held;
    
    if release_any and !held_any
    {
        can_pos = true;
        alarm[0] = -1;
    }
        
    if !can_pos and alarm[0] &lt; 1
    {
        alarm[0] = pos_delay;
    }

    pos = clamp(new_pos, 0, grid_max-1);
    
    if old_pos != pos
    {
        audio_play_sound(snd_tick, 0, false);
        selected_animation = true;
    }
    
    if inputmanager.menu.back_press or inputmanager.menu.escape_press
    {
        back_pressed = true;
    }
    
    if inputmanager.menu.accept_press
    {
        audio_play_sound(snd_select, 0, false);
        selected_animation = true;
    }
    
    if back_pressed
    {
        audio_play_sound(snd_select, 0, 0);
        
        menu_closed = true; //Start menu fade out animation
        
        menumanager.menu_level = 5;
        menumanager.pos = 0;
        menumanager.menuEnabled = true;
    }
    
    //Animation when selected
    if selected_animation
    { 
        if (anim_scale &gt; 0.9) {anim_scale -= 0.1;}
        else {selected_animation = false;}
    }
    else
    {
        if (anim_scale &lt; 1.1) {anim_scale += 0.1;}
        else {anim_scale = 1.1;}
    }

    var _inc = 0.125;
    if menu_alpha &lt; 1 then menu_alpha += _inc;
    else menu_alpha = 1;
}
else
{
    var _inc = 0.2;
    if menu_alpha &gt; 0 then menu_alpha -= _inc;
    else
    {
        menu_alpha = 0;
        
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(menu_alpha);

draw_set_font(font_menu);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var infospr = ach_info_border;
var infow = sprite_get_width(infospr);
var infoh = sprite_get_height(infospr);
var infox = 8;
var infoy = (viewh/2)-(infoh/2);

var info_header = "HEADER";
var info_headerxoff = infow/2;
var info_headerx = infox + info_headerxoff;
var info_headery = infoy + 6 + 36;
var info_headerscale = 0.85;

var info_progress = "(x/y)";
var info_progressxoff = infow/2;
var info_progressx = infox + info_progressxoff;
var info_progressy = infoy + 6 + 36 + 9;
var info_progressscale = 0.65;

var info_desc = "Description goes here and talks about stuff."
var info_descxoff = 6;
var info_descx = infox + info_descxoff;
var info_descy = infoy + 18 + 36;
var info_descscale = 0.65;

var info_icon = ach_icon_faded;
var info_iconx = infox + infow/2;
var info_icony = infoy + 22;

draw_sprite(infospr, 0, infox, infoy);

//Draw achievement count
var count_x = infox + infow/2;
var count_y = infoy-5;

var str = string(achievements_unlocked) + "/" + string(achievement_count);
var def_scale = 1
var str_scale = def_scale;

var strx = count_x;
var stry = count_y;

var _tCol = c_white;
var _tCol2 = c_ltgray;
var _sCol = c_black;

var _sep = 9;

draw_text_ext_transformed_colour(strx+1, stry+1, str,
 _sep, -1, str_scale, str_scale, 0, _sCol, _sCol, _sCol, _sCol, menu_alpha); //Shadow
draw_text_ext_transformed_colour(strx, stry, str,
 _sep, -1, str_scale, str_scale, 0, _tCol, _tCol, _tCol2, _tCol2, menu_alpha); //Main Text

 
var ach_startx = 111;
var ach_starty = 46;
var _row_spacing = 4;
var _col_spacing = 10
var _size = sprite_get_width(ach_icon_blank);
var _total = 0;

var scroll_x = ach_startx+((_row_spacing+_size)*row) - 16;// + _row_spacing+_size;
var scroll_y = ach_starty -16;
var scroll_width = 6;
var scroll_height = ((_col_spacing+_size)*column);

//Scroll bar
draw_sprite_stretched_ext(spr_black_pixel, 0, scroll_x, scroll_y, scroll_width, scroll_height,
    c_white, 0.5*menu_alpha);
    
var pmax = iif(page_max == 0, 1, page_max);
var scroll_amount = page_mult * (scroll_height / pmax)
var scroll_ind_y = scroll_y + scroll_amount;
scroll_ind_y_lerp = lerp(scroll_ind_y_lerp, scroll_ind_y, 0.25);
var scroll_ind_x = scroll_x + (scroll_width/2)
var scroll_ind_scale = 1;

draw_sprite_ext(spr_scroll_indicator, 0, scroll_ind_x, scroll_ind_y_lerp,
    scroll_ind_scale, scroll_ind_scale, 0, c_white, menu_alpha);

//Page up and down arrows
var parrowspr = spr_page_arrow;
var parrowx = ach_startx + (_size*2) + (_row_spacing*2)

if page_mult &gt; 0
{
    var parrow1y = ach_starty - 16;
    draw_sprite_ext(parrowspr, equip_index, parrowx, parrow1y, 1, 1, 0, c_white, menu_alpha);
}

if page_mult != page_max
{
    var parrow2y = ach_starty + (_size*2.5) + (_col_spacing*2);
    var parrow2rot = 180;
    draw_sprite_ext(parrowspr, equip_index, parrowx, parrow2y, 1, 1, parrow2rot, c_white, menu_alpha);
}

//Draw achievment rows and columns
for(i=0;i&lt;column;i++)
{
    for(j=0;j&lt;row;j++)
    {
        var _id = -1
        var _unlocked = false;
        var _icon = ach_icon_faded;
        var _displayname = "";
        var _desc = "";
        var _ach = ach_get_info(_total+page_offset);
        var a_scale = 1;
        var show_num = false;
        var _xoff = 0;
        var _yoff = 0;
        
        if pos == _total
        {
            a_scale = anim_scale;
            _yoff = -2;
        }
        
        if is_undefined(_ach)
        {
            //i = column;
            //j = row;
            //break;
            
            draw_sprite_ext(ach_icon_faded, 0,
             ach_startx+((_row_spacing+_size)*j)+_xoff,
             ach_starty+((_col_spacing+_size)*i)+_yoff,
             a_scale, a_scale, 0, c_white, 0.5*menu_alpha);
             //show_num = true;
        }
        else
        {
            if string_count("test",_ach[? "name"]) == 1 {show_num = true}
            // ^^^ REMOVE LATER DEV SHIT ^^^ 24524523525124523452345234523452345
            
            _unlocked = _ach[? "unlocked"];
            _id       = _ach[? "id"];
            _icon = _ach[? "icon"];
            _displayname = _ach[? "displayname"];
            _desc = _ach[? "desc"];
            _showprogress = _ach[? "showprogress"];
            _progress = _ach[? "progress"];
            _progresstotal = _ach[? "progresstotal"];
            
            draw_sprite_ext(_icon, 0,
             ach_startx+((_row_spacing+_size)*j)+_xoff,
             ach_starty+((_col_spacing+_size)*i)+_yoff,
              a_scale, a_scale, 0, c_white, menu_alpha);
             
            if !_unlocked
            {
                draw_sprite_ext(ach_icon_faded, 0,
                 ach_startx+((_row_spacing+_size)*j)+_xoff,
                 ach_starty+((_col_spacing+_size)*i)+_yoff,
                  a_scale, a_scale, 0, c_white, 0.75*menu_alpha);
            }
        }
        
        if pos == _total //If achievment is selected
        {
            info_icon = _icon;
            info_header = _displayname;
            info_desc = _desc;
            var _progress_str = "";
            if _showprogress
            {
                _progress_str = "(" + string(_progress) + "/" + string(_progresstotal) + ")";
            }
            info_progress = _progress_str;
            
            var _sel_alpha = 0.25;
            if _unlocked {_sel_alpha = 0.5;}
            draw_sprite_ext(ach_icon_selected, image_index,
             ach_startx+((_row_spacing+_size)*j)+_xoff,
             ach_starty+((_col_spacing+_size)*i)+_yoff,
             a_scale, a_scale, 0, c_white, 0.25*menu_alpha);
        
            var pos_yoff = 23;
            draw_sprite_ext(spr_style_equip, 0,
            ach_startx+((_row_spacing+_size)*j), ach_starty+((_col_spacing+_size)*i)+pos_yoff,
             a_scale, a_scale, 0, c_white, menu_alpha)
        }
         
        if show_num
        {
             draw_text(ach_startx+((_row_spacing+_size)*j)+_xoff, ach_starty+((_col_spacing+_size)*i)+_yoff,
              _id);
        }
        
        _total++;
    }
}

draw_sprite(info_icon, 0, info_iconx, info_icony);

draw_set_valign(fa_top);
//draw_set_halign(fa_left);

var _scalemod = 1;
var _len_cap = 16
var _len = string_length(info_header)
if _len &gt; _len_cap
{
    var _len_inc = 0.01;
    _scalemod -= (_len_inc *(_len-_len_cap)); //Scale 0.01 less per character over len_cap
}

var str = string_wordwrap_width(info_header, infow-8, "#", false, (info_headerscale*_scalemod));
var def_scale = info_headerscale * _scalemod
var str_scale = def_scale;

str = string_replace_all(str, " #", "#"); //Remove unneeded spaces where there are linebreaks to prevent
str = string_replace_all(str, "# ", "#"); // the text centering with the width of the spaces.

var strx = info_headerx
var stry = info_headery;

var _tCol = c_maroon;
var _tCol2 = c_orange;
var _sCol = c_black;

var _sep = 10;

draw_text_ext_transformed_colour(strx+1, stry+1, str,
 _sep, -1, str_scale, str_scale, 0, _sCol, _sCol, _sCol, _sCol, menu_alpha); //Shadow
draw_text_ext_transformed_colour(strx, stry, str,
 _sep, -1, str_scale, str_scale, 0, _tCol, _tCol, _tCol2, _tCol2, menu_alpha); //Main Text

 
//var _darkyoff = (string_count("#", str)*(7*_scalemod))
//var _darkyoff = (string_count("#", str)*(_sep*_scalemod))
var _oneline = string_height(string_char_at(str, 1));
var _darkyoff = ( string_count("#", str)*(_oneline*_scalemod) )
var _progressyoff = 0;
if info_progress != "" {_progressyoff = 7;}


//draw_sprite_ext(spr_black_pixel, 0, info_descx-3, info_descy-3+_darkyoff+_progressyoff,
//    infow-5, min(infoh-54-_darkyoff, infoy+infoh), 0, c_white, 0.25*menu_alpha);
var _darkRectX = info_descx-3;
var _darkRectY = info_descy-3+_darkyoff+_progressyoff;
draw_set_alpha(0.25*menu_alpha);
draw_rect_col(_darkRectX, _darkRectY, _darkRectX+(infow-7), infoy+infoh-4, c_black, false); 
draw_set_alpha(1);

draw_sprite_ext(spr_black_pixel, 0, infox+2, info_descy-3+_darkyoff+_progressyoff,
    infow-4, 1, 0, c_white, menu_alpha);

var str = info_progress;
var def_scale = info_progressscale
var str_scale = def_scale;

var strx = info_progressx;
var stry = info_progressy + _darkyoff;

var _tCol = c_ltgray;
var _tCol2 = c_dkgray;
var _sCol = c_black;

var _sep = 9;

draw_text_ext_transformed_colour(strx+1, stry+1, str,
 _sep, -1, str_scale, str_scale, 0, _sCol, _sCol, _sCol, _sCol, menu_alpha); //Shadow
draw_text_ext_transformed_colour(strx, stry, str,
 _sep, -1, str_scale, str_scale, 0, _tCol, _tCol, _tCol2, _tCol2, menu_alpha); //Main Text
    
draw_set_halign(fa_left);

var str = string_wordwrap_width(info_desc, infow-8, "#", false, info_descscale);
var def_scale = info_descscale
var str_scale = def_scale;

var strx = info_descx;
var stry = info_descy + _darkyoff + _progressyoff;

var _tCol = c_white;
var _tCol2 = c_ltgray;
var _sCol = c_black;

var _sep = 9;

draw_text_ext_transformed_colour(strx+1, stry+1, str,
 _sep, -1, str_scale, str_scale, 0, _sCol, _sCol, _sCol, _sCol, menu_alpha); //Shadow
draw_text_ext_transformed_colour(strx, stry, str,
 _sep, -1, str_scale, str_scale, 0, _tCol, _tCol, _tCol2, _tCol2, menu_alpha); //Main Text

draw_set_valign(fa_middle);
draw_set_halign(fa_right);

var bp_scale = (1/16)*3;
draw_text_transformed_colour(vieww-22, viewh-12, "Back", 0.75, 0.75, 0,
    c_white, c_white, c_ltgray, c_ltgray, menu_alpha);
draw_sprite_ext(bp_back_lt, inputmanager.control_type, vieww-12, viewh-12,
    bp_scale, bp_scale, 0, c_white, menu_alpha);

draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
