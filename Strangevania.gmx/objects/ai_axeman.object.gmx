<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_axeman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ai_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
facing = -1;
pointReward = 500;
hitSound = snd_hit2;

movespeed = 1;
movedir = facing;
movedelay = 0.5*room_speed;
pdir = -1;
moveonce = true;
canmove = false;
var rand = random_range(1, 3);
alarm[0] = rand*room_speed;
pdistance = 100;

outsideViewMax  = -1; //Disable parent functionality, doesn't despawn out of view

axedelay = 2*room_speed;
axeonce = true;
axey = choose(y-8, y+8);
var rand = random_range(1, 4);
alarm[2] = rand*room_speed;

hsp = 0
grv = 1;
vsp = 0;

hp = 20;
damage = 4;
axedamage = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if axeonce == 0
{
    axey = choose(y-8, y+8);
    with instance_create(x, axey, part_axe)
    {
        startdir = other.pdir;
        dir = other.pdir;
        parent = other;
        damage = other.axedamage;
    }
    axeonce = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canmove = false;
moveonce = true;
alarm[0] = movedelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canmove = true;
alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if disabled then exit;

if axeonce &gt; 0 axeonce--;

vsp = vsp + grv;
if vsp &gt;= 12 vsp = 12;

if obj_player.x &lt; x { pdir = -1; }
else { pdir = 1; }
facing = pdir;

if canmove
{
    if moveonce
    {
        if distance_to_point(obj_player.x, y) &gt;= pdistance
        {
            movedir = pdir;
        }
        else
        {
            movedir = pdir*-1;
        }
        moveonce = false;
    }
    hsp = movespeed*movedir;
    image_speed = 1;
}
else
{
    hsp = 0;
    image_speed = 0;
    image_index = 0;
}

//Vertical Collision
if place_meeting( x, y+vsp, obj_solid)
{
    while !place_meeting(x, y+sign(vsp), obj_solid)
    {
        y = y + sign(vsp)
    }
    vsp = 0;
}
y = y + vsp;

//Horizontal Collision
if place_meeting( x+hsp, y, obj_solid)
{
    while !place_meeting(x+sign(hsp), y, obj_solid)
    {
        x = x + sign(hsp)
    }
    hsp = 0;
}
x = x + hsp;

image_xscale = facing*-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
