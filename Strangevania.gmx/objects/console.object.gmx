<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_console</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-19999</depth>
  <persistent>-1</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*date_set_timezone(timezone_local);
var date = date_current_datetime()
var time = date_datetime_string(date);

time = string_replace_all(time, "/", "_");
time = string_replace_all(time, ":", ".");
time = string_replace_all(time, " ", "_");*/

debugLogFilename = working_directory + "logs/GAME-LOG-CURRENT.txt";
debugLogFile = file_text_open_write(debugLogFilename);
file_text_close(debugLogFile);

debugLog                = ds_list_create();
debugLogMaxSize         = 2000;
debugLogCount           = 0;
debugLogDisplayLines    = 18;
debugLogScrollOffset    = -1;
debugLogScrollAmount    = 2;
showDebugLog            = false;

print("CONSOLE INIT!");
console_init_commands();

helpMessage = false;

open = false;
key = 192;//192 code for '~' //vk_tab;
repeatkey = vk_f1;

panelheight = 24;
panelx = viewx;
panely = viewy+viewh-panelheight;

userInput = "";
commandString = "";
commandResult = "";

commandPrefix = "/";

suggestions = -1;

_oldks = keyboard_string;
_olduserInput = "";
inputLog = ds_list_create();

logMax = 10;
logCur = -1;
logSize = 0;

indicator_char = "Â«";
indicator = true;
indicator_delay = 0.3*room_speed;
alarm[0] = indicator_delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//console_updateLog()
//alarm[10] = debugLogUpdateDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = indicator_delay;
indicator = !indicator;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enabled = settings.enableconsole;
if !enabled then exit;

logSize = ds_list_size(inputLog);

if keyboard_check_pressed(vk_anykey)
{
    if open
    {
        _oldks = keyboard_string;
        
        if keyboard_string != inputLog[| logCur]
        {logCur = -1;}
    }
    else
    {
        keyboard_string = _oldks;
    }
}

if keyboard_check_pressed(console.key) and enabled
{
    if keyboard_check(vk_control)
    {
        showDebugLog = !showDebugLog
        debugLogScrollOffset = -1;
    }
    else
    {
        if open {_oldks = keyboard_string;}
        open = !open;
    }
}

if keyboard_check_pressed(console.repeatkey) and _olduserInput != ""
{
    console_runCommand(_olduserInput);
}
inputmanager.disableInput = open;

panelx = viewx;
panely = viewy+viewh-panelheight;

if keyboard_check_pressed(vk_up) and open
{
    //keyboard_string = _olduserInput;
    logCur++;
    logCur = clamp(logCur, -1, logSize-1);
    
    if logCur == -1
    {
        keyboard_string = "";
    }
    else
    {
        keyboard_string = inputLog[| logCur];
    }
}

if keyboard_check_pressed(vk_down) and open
{
    //keyboard_string = "";
    logCur--;
    logCur = clamp(logCur, -1, logSize-1);
    
    if logCur == -1
    {
        keyboard_string = "";
    }
    else
    {
        keyboard_string = inputLog[| logCur];
    }
}

if keyboard_check_pressed(vk_left) and open
{
    keyboard_string = "";
    logCur = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>console_updateLog();
console_saveLogFile();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if _oldks != keyboard_string
{
    keyboard_string = iif(open, keyboard_string, _oldks);
}*/

if showDebugLog
{
    var _len = ds_list_size(debugLog);
    var displayLines = debugLogDisplayLines;//18;
    
    if mouse_wheel_up() or mouse_wheel_down()
    {
        var _scrollMult = max(1, keyboard_check(vk_lshift)*8);
    
        var _dir = iif(mouse_wheel_up(), 1, -1)
        var _inc = _dir*debugLogScrollAmount*_scrollMult;
        debugLogScrollOffset = clamp(debugLogScrollOffset+_inc, -1, _len-(displayLines));   
    }
    
    draw_set_font(font_console);
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
    
    var displayString = "";
    var l = _len-(displayLines)-debugLogScrollOffset;
    //When scroll offset is -1, displays one less line, last line is ued for '&gt;'
    repeat(displayLines)
    {
        displayString += (debugLog[| l]+"#");
        l++;
        if l == _len then break;
    }
    
    if debugLogScrollOffset == -1 
    {
        displayString += "&gt;";
        //displayLines += 1; //DisplayLines+1 extra line for '&gt;' on last line
    }
    
    var dlTextScale = 0.5;
    var dlTextLineHeight = 10;
    //var dlHeight = (dlTextLineHeight*displayLines)+2;
    var dlHeight = (((string_height("&gt;")+2)*dlTextScale)*(displayLines))+2;
    
    draw_sprite_stretched_ext(spr_black_pixel, 0, viewx, viewy,
    vieww, dlHeight, c_white, 0.55);
    
    draw_text_ext_transformed(viewx+1, viewy+1, displayString, dlTextLineHeight, 9999,
                                 dlTextScale, dlTextScale, 0);
}

if open
{
    draw_sprite_stretched_ext(spr_black_pixel, 0, panelx, panely,
    vieww, panelheight, c_white, 0.75);
    
    if suggestions != -1
    {
        draw_sprite_stretched_ext(spr_black_pixel, 0, panelx, panely-8,
        vieww, 8, c_white, 0.35);
    }
    
    var updateSuggestions = false;
    if userInput != keyboard_string //Every time kbstring updates
    {
       updateSuggestions = true;
    }
    
    userInput = keyboard_string;
    userInput = string_replace_all(userInput, "#", "\#");
    userInput = string_replace_all(userInput, "`", "");
    userInput = string_replace_all(userInput, "~", "");
    
    if updateSuggestions
    {
        suggestions = -1;
        if userInput != ""
        {
            var s = 0;
            for (c = 0; c &lt; ds_list_size(console.commandList); c++)
            {
                var filteredInput = string_replace_all(userInput, "/", "");
                var _cmd = console.commandList[| c];
                if string_count(filteredInput, _cmd)
                {
                    suggestions[s] = _cmd;
                    //show_debug_message(string(s) +": " + string(_cmd));
                    s++;
                }
            }
        }
    }
    
    if keyboard_check_pressed(vk_enter) and userInput != ""
    {
        commandString = userInput;
        _olduserInput = userInput;
        
        var _index = ds_list_find_index(inputLog, userInput);
        if _index == -1 
        {
            ds_list_insert(inputLog, 0, userInput)
            var _size = ds_list_size(inputLog);
            if _size &gt; logMax
            {
                ds_list_delete(inputLog, _size-1);
            }
        }
        else
        {
            var _value = inputLog[| _index];
            ds_list_delete(inputLog, _index);
            ds_list_insert(inputLog, 0, _value);
        }
        
        console_runCommand(userInput);
        console_clearUserInput();
    }
    
    console_drawTextInput();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OLD DEPTH WAS -11</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
