<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_intromanager</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
director.hideMouse = true;
finaleBackground = false;
fogStep = 0;
titlesprite = logo_title;
titlestep = 0;

if stat_get("FINISHED_GAME") and !settings.oldmenu
{
    instance_destroy(obj_arthur);
    instance_destroy(obj_dracula);
    finaleBackground = true;
    titlesprite = logo_title_finale;
    audio_play_sound(snd_wind, 1, 1);
    music_fade_out(2000);
    //music_fade_in(song_namelesssong, 10000);
    alarm[4] = 9*room_speed; //Delay to start music
}
else
{
    music_play(song_intheway);
}

flavorText_str      = "";
flavorText_col1     = c_white;
flavorText_col2     = c_white;
flavorText_scale    = 0.5;
flavorText_alpha    = 1;
flavorText_xoff     = 0;
flavorText_yoff     = -16;
flavorText_font     = font_hud;

//shadow
flavorText_scol1    = c_black;
flavorText_scol2    = c_black;
flavorText_salpha   = 1

flavorText_pulse        = true;
flavorText_pulse_speed  = 0.125;
flavorText_pulse_val    = 0;
flavorText_pulse_amp    = 0.05;

//HOLIDAY TITLE CHANGES HERE!!!!!!!!!!!!!!!!!!!!
//HOLIDAY TITLE CHANGES HERE!!!!!!!!!!!!!!!!!!!!

if GAME_HOLIDAY == "outlawday" {
    titlesprite = logo_title_purple;
    flavorText_str = "Happy Outlaw Day!";
}

if GAME_HOLIDAY == "christmas" {
    titlesprite = logo_title_christmas;
    flavorText_str = "Merry Christmas!";
    flavorText_col1     = c_lime;
    flavorText_col2     = c_green;
    flavorText_scale    = 0.75;
}

//BIRTHDAYS//BIRTHDAYS//BIRTHDAYS//BIRTHDAYS
if GAME_HOLIDAY == "charliebday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Charlie!";
}

if GAME_HOLIDAY == "gummybday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Gummy!";
}

if GAME_HOLIDAY == "austinbday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Austin!";
}

if GAME_HOLIDAY == "elenabday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Elena!";
}

if GAME_HOLIDAY == "keypilotbday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Keypilot!";
}

if GAME_HOLIDAY == "cookiebday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Cookie!";
}

if GAME_HOLIDAY == "davidbday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday David!";
}

if GAME_HOLIDAY == "kylebday" {
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday Kyle!";
}

if GAME_HOLIDAY == "pearbday"{
    titlesprite = logo_title_rainbow;
    flavorText_str = "Happy Birthday To Me!#:soyoucumnow:";
}
//BIRTHDAYS//BIRTHDAYS//BIRTHDAYS//BIRTHDAYS

//HOLIDAY TITLE CHANGES HERE!!!!!!!!!!!!!!!!!!!!
//HOLIDAY TITLE CHANGES HERE!!!!!!!!!!!!!!!!!!!!

level_current = -1;
canSkip = !stat_get("FORCE_INTRO");
skipIntro = settings.skipintro;
introFinished = false;
firststep = true;

pearframe = 0;

anykey = keyboard_check_released(vk_anykey);

tyoffsetdef = -92;
tyoffset = -tyoffsetdef;
tybounce = 0;
tybspeed = 0.05;
titlex = vieww/2;
titley = viewh/4 + tyoffset;

bgrFade = 1;
logoFade = 1;
showLogo = true;
showBgr = true;
pushAlpha = 0;
pushFlicker = false;

birdtimer = 5*room_speed;
birdx = vieww+16;
birdy = 16;

glowmax = 0.60
glowmin = 0.35;
glow = glowmin;
glowinc = 0.05;
glowa = glowmin;

alphacheck = 0;

flashdelay = 6*room_speed
flash = 0;
flashinc = 0.02;
flashamount = 0.4;
flashtarget = "drac";

versionAlpha = 0;

alarm[0] = 4*room_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = flashamount;
alarm[10] = 5;
alarm[11] = flashdelay;

if flashtarget == "drac"
{
    flashtarget = "arth";
}
else
{
    flashtarget = "drac";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = flashamount;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>music_fade_in(song_namelesssong, 10000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(3)
{
    var randx = random(24);
    var randy = random(24);
    instance_create(birdx+randx, birdy+randy, intro_bird);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !menumanager.menuEnabled
{
    pushAlpha = !pushAlpha;
    alarm[2] = 0.5*room_speed;
}
else
{
    pushAlpha = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>showBgr = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>showLogo = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anykey = inputmanager.any_press;

if bgrFade &gt; 0 and !inputmanager.mouse_moved
{
    director.hideMouse = true;
}

if firststep
{
    if (skipIntro or global.skipIntroOnce) and canSkip
    {
        showBgr     = false;
        showLogo    = false;
        logoFade    = 0;
        bgrFade     = 0;
        pushFlicker = true;
        titley      = -100;
        alarm[3]    = 1;
        alarm[2]    = 1;
        alarm[11]   = 1;
        if alarm[4] &gt; 1 then alarm[4] = 1;
        //global.skipIntroOnce = false;
    }
    global.skipIntroOnce = false;
    firststep = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(snd_wind)
{
    audio_stop_sound(snd_wind);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_hud);
if !finaleBackground {draw_sprite_ext(glowmap, 0, 0, 0, 1, 1, 0, c_white, glowa)}

if finaleBackground
{
    var fogSpeed = 0.2;
    fogStep += fogSpeed;
    if fogStep &gt;= 320 then fogStep = 0;
    draw_background(bgr_finale, 0, 0);
    draw_background_tiled_ext(bgr_fog, 0+fogStep, 0, 1, 1, c_white, 0.35)
}

titlex = vieww/2;
titley = lerp(titley, viewh/4 + tyoffset, 0.1);
tyoffset = min(tyoffsetdef*(bgrFade), 0);
if menumanager.menu_level == menulevel.styles {tyoffset = tyoffsetdef;}//-24;}
if menumanager.menu_level == menulevel.achievements {tyoffset = tyoffsetdef;}

var _amp = 0.5;
draw_sprite_ext(titlesprite, titlestep, titlex, titley+(sin(tybounce)*_amp), 1, 1, 0, c_white, 1-(bgrFade));
titlestep++;
if titlestep &gt;= sprite_get_number(titlesprite) then titlestep = 0;

if flavorText_str != ""
{
    var _scaleOff = 0;
    if flavorText_pulse
    {
        flavorText_pulse_val += flavorText_pulse_speed
        _scaleOff = (sin(flavorText_pulse_val)*flavorText_pulse_amp)
    }

    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(flavorText_font);
    
    draw_text_transformed_colour(titlex+flavorText_xoff+1, titley+flavorText_yoff+(sin(tybounce)*_amp)+1,
        flavorText_str, flavorText_scale+_scaleOff, flavorText_scale+_scaleOff,
        0, flavorText_scol1, flavorText_scol1, flavorText_scol2, flavorText_scol2, flavorText_salpha);
    draw_text_transformed_colour(titlex+flavorText_xoff, titley+flavorText_yoff+(sin(tybounce)*_amp),
        flavorText_str, flavorText_scale+_scaleOff, flavorText_scale+_scaleOff,
        0, flavorText_col1, flavorText_col1, flavorText_col2, flavorText_col2, flavorText_alpha);
    
    draw_set_font(font_hud);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}

draw_sprite_ext(spr_black, 0, -1, -1, 400, 400, 0, c_white, bgrFade);

if anykey and !director.key_screenshot
{
    if logoFade &gt; 0.1
    {
        if canSkip
        {
            showLogo = false;
            logoFade = 0
            showBgr = false;
            if alarm[4] &gt; 1 then alarm[4] = 1;
        }
    }
    else if bgrFade &gt; 0//showBgr == false and bgrFade &gt; 0
    {
        if canSkip
        {
            bgrFade = 0;
            alarm[3] = 1;
            pushFlicker = true;
            alarm[2] = 1;
            alarm[11] = 1;
        }
    }
    else if menumanager.menuEnabled == false and !introFinished and bgrFade &lt;= 0.005
    {
        menumanager.menuEnabled = true;
        introFinished = true;
        event_fire("IntroFinished");
        audio_play_sound(snd_crash, 1, 0);
        pushAlpha = 0;
        pushFlicker = false;
    }
}

if !showLogo and logoFade &gt; 0
{
    logoFade -= 0.01;
}

if logoFade &lt;= 0 and alarm[1] &lt; 1
{
    alarm[1] = 2.5*room_speed;
}

if !showBgr
{
    bgrFade -= 0.005;
}

if bgrFade &lt;= 0.45 and !pushFlicker
{
    pushFlicker = true;
    alarm[3] = 1*room_speed; //Bats spawn
    alarm[2] = 4*room_speed; //Push start text
    alarm[11] = 4*room_speed; //Lightning flashes
}

if bgrFade &lt;= 0
{
    tybounce += tybspeed;
}

var flicker = random_range(0.97, 1.03)
var a = random_range(0.95, 1)
draw_sprite_ext(logo_glow, 0, (vieww/2), viewh/2,
flicker, flicker, 0, c_green, a*logoFade);
draw_sprite_ext(logo_pef, pearframe , (vieww/2), viewh/2,
1, 1, 0, c_white, (a-0.25)*logoFade);

if pearframe &lt; sprite_get_number(logo_pef)+1 {pearframe++;}
else pearframe = 0;

var str = "Made by Peartotype";
var len = string_width(str);
draw_text_colour(vieww/2-(len/2), viewh/2+32, str,
c_white, c_white, c_white, c_white, a*logoFade)

if pushFlicker and !introFinished
{
    str = "PUSH START KEY";
    len = string_width(str);
    draw_text_ext_transformed_colour(vieww/2-(len/4), (viewh/4)*3, str, 0, 9999, 0.5, 0.5, 0,
    c_white,c_white,c_white,c_white, pushAlpha)
}

if alphacheck == 0
{
    if sign(glowinc)
    {
        if glow &lt; glowmax
        {
            glow += glowinc;
        }
        else
        {
            glowinc = glowinc*-1;
        }
    } else {
        if glow &gt; glowmin
        {
            glow += glowinc;
        }
        else
        {
            glowinc = glowinc * -1;
        }
    }
    glowa = glow;
    alphacheck = 7;
}
else
{
    alphacheck--;
}

if flash &gt; 0
{
    flash -= flashinc;
}

/*draw_sprite_ext(logo_glow, 0, (vieww/4)*3, viewh/2,
1, 1, 0, c_green, 1);
draw_sprite(logo_pef, 0, (vieww/4)*3, viewh/2);*/

if introFinished
{
    var alphaMax = 0.250//0.125;
    var alphaInc = 0.00725;
    if versionAlpha &lt; alphaMax then versionAlpha = clamp(versionAlpha+alphaInc, 0, alphaMax)
    draw_set_font(font_console);
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
    
    var str = "ver "+string(director.game_version)+"."+string(director.game_subversion);
    
    /*date_set_timezone(timezone_utc);
    var _date = date_date_string(GM_build_date);
    var _day = string(date_get_day(GM_build_date));
    var _hour = string(date_get_hour(GM_build_date));
    var _min = string(date_get_minute(GM_build_date));
    
    //str += " ("+_date+" "+_hour+_min+")";
    str+="."+_day+_hour+_min*/
    
    var len = string_width(str);
    var scale = 0.30;
    var _xOff = 0;
    var _yOff = 0;
    if (settings.tube_enabled and settings.oldtvfilter_enabled) {_xOff = -9; _yOff = -2;}
    draw_text_transformed_colour(vieww-(len*scale)-1+_xOff, viewh-(3)+_yOff, str, scale, scale, 0,
    c_white, c_white, c_white, c_white, versionAlpha)
    
    if !instance_exists(changelogmenu_manager) and menumanager.menu_level == menulevel.main
    {
        //Changelog button
        draw_set_valign(fa_middle);
        draw_set_halign(fa_left);
        
        var _buttonText = "Changelog";
        var _buttonTextScale = 0.5;
        var _buttonAlphaMax = 0.8;
        var _buttonAlpha = lerp(0, _buttonAlphaMax, (versionAlpha / alphaMax))
        
        var bp_scale = (1/16)*2
        draw_text_transformed_colour(14, viewh-8, _buttonText, _buttonTextScale, _buttonTextScale, 0,
            c_white, c_white, c_ltgray, c_ltgray, _buttonAlpha);
        draw_sprite_ext(bp_weapon, inputmanager.control_type, 6, viewh-8,
            bp_scale, bp_scale, 0, c_white, _buttonAlpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
