<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_camera) &gt; 1 then instance_destroy();
if !instance_exists(obj_camera_collider) {instance_create(x, y, obj_camera_collider);}

camblockEnabled = true;
movingEnabled = true;

old_x = x;
old_y = y;

image_speed = 0;
xview = x;
yview = y;

target = obj_player;
camLerp = false;
lerpDefault = 0.2;
lerpAmount = lerpDefault;
lerpx = target.x;
lerpy = target.y;

camblockLeft = 0;
camblockRight = 0;
camblockUp = 0;
camblockDown = 0;

xmin = 0;
xmax = room_width;
ymin = 0;
ymax = room_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movingEnabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = global.debugshowcamera;

var cw = view_wview[0];
var ch = view_hview[0];
var cx = obj_player.x - cw / 2;
var cy = obj_player.y - ch / 2;
//x = clamp(lerp(x, cx, 0.1), 0, room_width - cw);
//y = clamp(lerp(y, cy, 0.1), 0, room_height - ch);
//x = clamp(cx, 0, room_width - cw);
//y = clamp(cy, 0, room_height - ch);

xview = x;
yview = y;

if camblockLeft
{xmin = camblockLeft+1+(vieww/2)}
else {xmin = 0;}

if camblockRight
{xmax = camblockRight-1-(vieww/2)}
else {xmax = room_width;}

if camblockUp
{ymin = camblockUp+1+(viewh/2)}
else {ymin = 0;}

if camblockDown
{ymax = camblockDown-1-(viewh/2)}
else {ymax = room_height;}

if movingEnabled
{
    if !camLerp
    {  
        //while (x != target.x and !obj_camera_collider._blockHor)
        //{x += sign(target.x - x);}
        x = target.x;
        
        //while (y != target.y and !obj_camera_collider._blockVer)
        //{y += sign(target.y - y);}
        y = target.y;
        
        lerpx = x;
        lerpy = y;
    }
    else
    {
        var _dist = distance_to_point(target.x, target.y);
        //show_debug_message(_dist);
        lerpx = lerp(lerpx, target.x, lerpAmount);
        lerpy = lerp(lerpy, target.y, lerpAmount);
        if _dist &lt;= 1
        {
            lerpx = target.x
            lerpy = target.y
        }
        
        x = lerpx;
        y = lerpy;
    }

    if InsideView(player.x, player.y)
    {
        if camblockEnabled
        {
            x = clamp(x, xmin, xmax);
            y = clamp(y, ymin, ymax);
        }
    }
}

if player.y &lt;= view_yview[0]+(view_hview[0]/2)
{
    view_vborder[0] = 96//64;
}
else
{
    view_vborder[0] = 31;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movingEnabled = false;
//alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//d3d_transform_set_translation(-xview, -yview, 0);
//d3d_set_projection_ortho(xview, yview, 320, 240, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_camera, 0, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_camera, 1, viewx+vieww/2, viewy+viewh/2, 1, 1, 0, c_white, image_alpha);

//draw_sprite_ext(spr_camborder, 0, viewx, viewy, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
