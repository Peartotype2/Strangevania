<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camborder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_xscale = vieww;
_yscale = viewh;
image_alpha = 0.6;
mask_index = spr_camborder;

hsp = 0;
vsp = 0;

x = viewx;
y = viewy;

_blockLeft  = noone;
_blockRight = noone;
_blockUp    = noone;
_blockDown  = noone;
_blockAny = false;
_blockHor = false;
_blockVer = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_camera.camblockEnabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>old_x = x;
old_y = y;
x = viewx;
y = viewy;

if old_x != x then hsp = (x-old_x)
else hsp = 0;
if old_y != y then vsp = (y-old_y)
else vsp = 0;

//var _viewcenterx = viewx+(vieww/2);
//var _viewcentery = viewy+(viewh/2);

_margin = 2;

_blockLeft  = instance_place(x+min(-_margin, hsp), y, obj_camblock_left)//obj_camblock_hor)
_blockRight = instance_place(x+max(_margin, hsp), y, obj_camblock_right)//obj_camblock_hor)
_blockUp    = instance_place(x, y+min(-_margin, vsp), obj_camblock_up)//obj_camblock_ver)
_blockDown  = instance_place(x, y+max(_margin, vsp), obj_camblock_down)//obj_camblock_ver)
_blockAny = (_blockLeft or _blockRight or _blockUp or _blockDown);
_blockHor = (_blockLeft or _blockRight);
_blockVer = (_blockUp or _blockDown);

/*if _blockLeft {if _blockLeft.object_index == obj_camblock_right then _blockLeft = noone;}
if _blockRight {if _blockRight.object_index == obj_camblock_left then _blockRight = noone;}
if _blockUp {if _blockUp.object_index == obj_camblock_down then _blockUp = noone;}
if _blockDown {if _blockDown.object_index == obj_camblock_up then _blockDown = noone;}*/

_border = 16;// _leftAtEdge, _rightAtEdge, _playerWithinBlock;

camblockCheckLeft();

camblockCheckRight();

/*if _blockRight and bbox_right+_margin &gt;= _blockRight.bbox_left and _blockRight.bbox_left &gt; bbox_right-_border
    and (player.bbox_bottom &gt; _blockRight.bbox_top and player.bbox_top &lt; _blockRight.bbox_bottom)
{obj_camera.camblockRight = _blockRight.bbox_left;}
else {obj_camera.camblockRight = 0;}*/

if _blockUp and bbox_top-_margin &lt;= _blockUp.bbox_bottom and _blockUp.bbox_bottom &lt; bbox_top+_border
    and (player.bbox_right &gt; _blockUp.bbox_left and player.bbox_left &lt; _blockUp.bbox_right)
{obj_camera.camblockUp = _blockUp.bbox_bottom;}
else {obj_camera.camblockUp = 0;}

if _blockDown and bbox_bottom+_margin &gt;= _blockDown.bbox_top and _blockDown.bbox_top &gt; bbox_bottom-_border
    and (player.bbox_right &gt; _blockDown.bbox_left and player.bbox_left &lt; _blockDown.bbox_right)
{obj_camera.camblockDown = _blockDown.bbox_top;}
else {obj_camera.camblockDown = 0;}/////

/*if _blockLeft and bbox_left-_margin &lt;= _blockLeft.bbox_right and _blockLeft.bbox_right &lt; bbox_left+_border
    and (player.y &gt; _blockLeft.bbox_top and player.y &lt; _blockLeft.bbox_bottom)
{obj_camera.camblockLeft = _blockLeft.bbox_right;}
else {obj_camera.camblockLeft = 0;}

if _blockRight and bbox_right+_margin &gt;= _blockRight.bbox_left and _blockRight.bbox_left &gt; bbox_right-_border
    and (player.y &gt; _blockRight.bbox_top and player.y &lt; _blockRight.bbox_bottom)
{obj_camera.camblockRight = _blockRight.bbox_left;}
else {obj_camera.camblockRight = 0;}

if _blockUp and bbox_top-_margin &lt;= _blockUp.bbox_bottom and _blockUp.bbox_bottom &lt; bbox_top+_border
    and (player.x &gt; _blockUp.bbox_left and player.x &lt; _blockUp.bbox_right)
{obj_camera.camblockUp = _blockUp.bbox_bottom;}
else {obj_camera.camblockUp = 0;}

if _blockDown and bbox_bottom+_margin &gt;= _blockDown.bbox_top and _blockDown.bbox_top &gt; bbox_bottom-_border
    and (player.x &gt; _blockDown.bbox_left and player.x &lt; _blockDown.bbox_right)
{obj_camera.camblockDown = _blockDown.bbox_top;}
else {obj_camera.camblockDown = 0;}/////*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



/*var old_x = x;
var old_y = y;
x = viewx;
y = viewy;

if old_x != x then hsp = (x-old_x)
else hsp = 0;
if old_y != y then vsp = (y-old_y)
else vsp = 0;

//var _viewcenterx = viewx+(vieww/2);
//var _viewcentery = viewy+(viewh/2);

var _margin = 2;

_blockLeft  = instance_place(x+min(-_margin, hsp), y, obj_camblock_left)//obj_camblock_hor)
_blockRight = instance_place(x+max(_margin, hsp), y, obj_camblock_right)//obj_camblock_hor)
_blockUp    = instance_place(x, y+min(-_margin, vsp), obj_camblock_up)//obj_camblock_ver)
_blockDown  = instance_place(x, y+max(_margin, vsp), obj_camblock_down)//obj_camblock_ver)
_blockAny = (_blockLeft or _blockRight or _blockUp or _blockDown);
_blockHor = (_blockLeft or _blockRight);
_blockVer = (_blockUp or _blockDown);

/*if _blockLeft {if _blockLeft.object_index == obj_camblock_right then _blockLeft = noone;}
if _blockRight {if _blockRight.object_index == obj_camblock_left then _blockRight = noone;}
if _blockUp {if _blockUp.object_index == obj_camblock_down then _blockUp = noone;}
if _blockDown {if _blockDown.object_index == obj_camblock_up then _blockDown = noone;}*/
/*
var _border = 16;

if _blockLeft and bbox_left-_margin &lt;= _blockLeft.bbox_right and _blockLeft.bbox_right &lt; bbox_left+_border
    and (player.y &gt; _blockLeft.bbox_top and player.y &lt; _blockLeft.bbox_bottom)
{obj_camera.camblockLeft = _blockLeft.bbox_right;}
else {obj_camera.camblockLeft = 0;}

if _blockRight and bbox_right+_margin &gt;= _blockRight.bbox_left and _blockRight.bbox_left &gt; bbox_right-_border
    and (player.y &gt; _blockRight.bbox_top and player.y &lt; _blockRight.bbox_bottom)
{obj_camera.camblockRight = _blockRight.bbox_left;}
else {obj_camera.camblockRight = 0;}

if _blockUp and bbox_top-_margin &lt;= _blockUp.bbox_bottom and _blockUp.bbox_bottom &lt; bbox_top+_border
    and (player.x &gt; _blockUp.bbox_left and player.x &lt; _blockUp.bbox_right)
{obj_camera.camblockUp = _blockUp.bbox_bottom;}
else {obj_camera.camblockUp = 0;}

if _blockDown and bbox_bottom+_margin &gt;= _blockDown.bbox_top and _blockDown.bbox_top &gt; bbox_bottom-_border
    and (player.x &gt; _blockDown.bbox_left and player.x &lt; _blockDown.bbox_right)
{obj_camera.camblockDown = _blockDown.bbox_top;}
else {obj_camera.camblockDown = 0;}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////
var _viewcenterx = viewx+(vieww/2);////
var _viewcentery = viewy+(viewh/2);////
///
//////

if global.debugshowcamera
{
    //draw_sprite_ext(spr_white_pixel, 0, x, y, _xscale, _yscale, 0, image_blend, image_alpha);
    draw_self();
    
    if obj_camera.camblockLeft  {draw_sprite(spr_camblock_hor, 0, bbox_left, _viewcentery-8)}
    if obj_camera.camblockRight {draw_sprite(spr_camblock_hor, 0, bbox_right-16, _viewcentery-8)}
    if obj_camera.camblockUp    {draw_sprite(spr_camblock_ver, 0, _viewcenterx-8, bbox_top)}
    if obj_camera.camblockDown  {draw_sprite(spr_camblock_ver, 0, _viewcenterx-8, bbox_bottom-16)}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
