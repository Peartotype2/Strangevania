<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>portrait = ach_icon_firstkill;
portraitIndex = 0;
_oldIndex = 0;
text = "Hello world! This is a bunch of long text for testing things lol ";
//text = "EDIT: for clarification, chatGPT is NOT bad and I don't mean to insinuate it is. It's just like google, it can help you find answers and point you in the right direction, can be used as a tool like calculators, but just like answers from google,"
text = "The sun slowly dipped below the horizon, casting a warm glow across the tranquil landscape. Birds chirped in the distance, their melodic tunes blending harmoniously with the gentle rustle of leaves. Nature's serenity embraced the world, as if time stood still in this fleeting moment of peaceful bliss. Beauty exists beyond our hurried lives.";
writeSpeed = 1;
draw_char = 0;

fade_alpha = 0;
fade_speed = 0.066//1;

canSkip = true;

pause = 0;
pauseDelay = 0.35*room_speed;

_soundTick = 0;
_soundRate = 2;
_soundFile = snd_voice1;

pitchMin    = 0.95;
pitchMax    = 1.05;

var _pad = 4;
_textxoff = 32+_pad;
var _border = 2;

_textscale = 0.5;

line_sep = 12;
line_width = vieww-(_textxoff)-(_border*2)

finished = false;

firstStep = true;

scene_id = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(gamemanager)
{
    if gamemanager.paused
    {
        if !pause then pause = 1;
        pause++;
    }
}


pause--;
pause = max(pause, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if firstStep
{
    text_length = string_length(text);
    firstStep = false;
}

draw_set_alpha(fade_alpha);

//if fade_alpha &lt; 1
//{
    fade_alpha += fade_speed;
    fade_alpha = clamp(fade_alpha,0,1);
//}

//Draw black rect over HUD
if instance_exists(gamemanager)
{
    draw_rectangle_colour(viewx,viewy,viewx+vieww,viewy+gamemanager.hud_height,c_black,c_black,c_black,c_black,0)
}
else
{
    draw_rectangle_colour(viewx,viewy,viewx+vieww,viewy+33,c_black,c_black,c_black,c_black,0)
}

var _pad = 17;
var _portx = viewx+_pad;
var _porty = viewy+_pad;

draw_sprite_ext(portrait, portraitIndex, _portx, _porty, 1, 1, 0, c_white, 1*fade_alpha);

var _textx = viewx+_textxoff;
var _texty = viewy+2;

if draw_char &lt; text_length and !pause
{
    draw_char += writeSpeed;
    draw_char = clamp(draw_char, 0, text_length);
}

if inputmanager.menu.accept_press and canSkip
{
    if instance_exists(gamemanager)
    {
        if !gamemanager.paused then draw_char = text_length;
    }
    else
    {
        draw_char = text_length;
    }
}

draw_set_font(font_menu)
draw_set_halign(fa_left);
draw_set_valign(fa_top);

var _drawtext = string_copy(text, 1, draw_char);
var _newlen = string_length(_drawtext);
var _newchar = string_char_at(_drawtext, _newlen);
var _nextchar = string_char_at(text, _newlen+1);
_drawtext = string_wordwrap_width(_drawtext, line_width, "#", true, _textscale);
//print(string_width(_drawtext));
//draw_text_transformed_colour(_textx+1, _texty+1, text, _textscale, _textscale, 0,
//    c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
//draw_text_transformed_colour(_textx, _texty, _drawtext, _textscale, _textscale, 0,
//    c_white, c_white, c_ltgray, c_ltgray, 1);
draw_text_ext_transformed_colour(_textx, _texty, _drawtext, line_sep, 999999, _textscale, _textscale, 0,
    c_white, c_white, c_ltgray, c_ltgray, 1*fade_alpha);

if (_newchar == "," or _newchar == "." or _newchar == "!" or _newchar == "?")
    and (_nextchar == " " or _nextchar == ".")
    and !pause
{
    pause += pauseDelay;
    portraitIndex = 0;
}

if !finished and !pause
{
    if _newchar != "." and _newchar != " " and _newchar != "!" and _newchar != "?"
    {
        _soundTick += writeSpeed;
    }
    if _soundTick &gt;= _soundRate
    {
        if _newchar != "." and _newchar != " " and _newchar != "!" and _newchar != "?"
        {
            var _pitch = random_range(pitchMin, pitchMax);
            var _s = audio_play_sound(_soundFile, 1, 0);
            audio_sound_pitch(_s, _pitch);
        }
        _soundTick = 0;
        while(portraitIndex = _oldIndex)
        {
            portraitIndex = irandom_range(1, sprite_get_number(portrait)-1);
        }
        _oldIndex = portraitIndex;
    }
}
else portraitIndex = 0;

finished = (draw_char == text_length);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
