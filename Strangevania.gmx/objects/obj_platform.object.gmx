<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create a collision object for AI
var _w = sprite_width;
var _h = sprite_height;
var _xoff = sprite_xoffset;
var _yoff = sprite_yoffset;
with instance_create(x, y, obj_aisolid)
{
    target = other;
    xoff = _xoff;
    yoff = _yoff;
    image_xscale = _w;
    image_yscale = _h;
}
_selected = false;
sprite_index = noone; //No sprite means no collision
collision = false;
disabled = gamemanager.paused;

moveSpeed = 1;
currentSpeed = moveSpeed;

slowDistance = 12;
slowInc = 0//0.05; //These SLOW values work but cause camera jitter
minSpeed = 0.25;

moveX = 0;
moveY = 0;

goingToStart = false;
waitTime = 30;


startx = x;
starty = y;

endx = x//startx+120;
endy = y//starty;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentSpeed = moveSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if disabled
{
    for(i = 0; i &lt;= 11; i++)
    {
        if alarm_get(i) &gt; 0 {alarm[i]++}
    }
    exit;
}

x += moveX;
y += moveY;

if goingToStart
{
    var _dist = point_distance(x, y, startx, starty);
    if _dist &lt; slowDistance
    {
        var _newSpeed = currentSpeed - slowInc*sign(currentSpeed);
        currentSpeed = clamp(_newSpeed, minSpeed, moveSpeed);
    }
    if _dist &lt; currentSpeed
    {
        goingToStart = false;
        x = startx;
        y = starty;
        currentSpeed = 0;
        alarm[0] = waitTime;
    }
}
else if !goingToStart
{
    var _dist = point_distance(x, y, endx, endy)
    if _dist &lt; slowDistance
    {
        var _newSpeed = currentSpeed - slowInc*sign(currentSpeed);
        currentSpeed = clamp(_newSpeed, minSpeed, moveSpeed);
    }
    if _dist &lt; currentSpeed
    {
        goingToStart = true;
        x = endx;
        y = endy;
        currentSpeed = 0;
        alarm[0] = waitTime;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disabled = gamemanager.paused or global.cutscene_paused;

mask_index = spr_platform;
var _oldMask = player.mask_index;
player.mask_index = spr_player;
collision = (player.bbox_bottom &lt; bbox_top);
player.mask_index = _oldMask//player.sprite_index;

mask_index = iif(collision, spr_platform, -1)

var _targetx = endx, _targety = endy;
if goingToStart
{
    _targetx = startx;
    _targety = starty;
}

moveX = sign(_targetx - x) * currentSpeed;
moveY = sign(_targety - y) * currentSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///THIS IS NEEDED TO OVERRIDE STEP EVENT CODE IN PARENT OBJ_WALL


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _col = c_white;
if global.showhitbox
{
    _col = image_blend

    draw_set_colour(c_red);
    draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1)
    draw_rectangle(bbox_left-1,bbox_top-1,bbox_right+1,bbox_bottom+1,1)
    draw_set_colour(c_white);
    
    if _selected then _col = c_black;
    _selected = false;
}

draw_sprite_ext(spr_platform, 0, x, y,
image_xscale, image_yscale, image_angle, _col, image_alpha);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
