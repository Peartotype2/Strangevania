<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_settings</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count = 0;
visibleCount = 0;
list = ds_list_create();
visibleList = ds_list_create();

setting_register("oldmenu", "Original Main Menu", 0, a1("Off", "On"), "FINISHED_GAME", "Extras");
setting_register("enableconsole", "Enable Console", 0, a1("Disabled", "Enabled"), "CHEATS_ENABLED");
//setting_register("keyboardlayout", "Keyboard Layout", 1, a1("WASD", "Arrows Keys"));
//setting_register("crtmode", "CRT Mode", 1, a1("Disabled", "Enabled"));
setting_register("stairfade", "Stair Fade Transition", 1, a1("Disabled", "Enabled"));
setting_register("spriteflicker", "Sprite Flicker", 1, a1("Disabled", "Enabled"));
setting_register("achpopup", "Achievement Popups", 1, a1("Disabled", "Enabled"));
setting_register("gamepadtype", "Gamepad Type", 1, a1("XBox", "Playstation", "Switch"));
setting_register("whipeffects", "Whip Special Effects", 1, a1("Disabled", "Enabled"));
setting_register("skipintro", "Skip Intro", 0, a1("No", "Yes"));

//Modifiers
setting_register("noeasyweapon", "No Easy Weapon", 0, a1("- ", "ON"), "HIDDEN", "Modifiers");
setting_register("onehit", "1 HP Mode", 0, a1("- ", "ON"), "HIDDEN", "Modifiers");
setting_register("permadeath", "Perma Death", 0, a1("- ", "ON"), "HIDDEN", "Modifiers");
setting_register("nowhips", "No Whips", 0, a1("- ", "ON"), "HIDDEN", "Modifiers");
setting_register("noweapons", "No Weapons", 0, a1("- ", "ON"), "HIDDEN", "Modifiers");

//CRT Settings
setting_register("crt_reset", "Reset To Defaults", 0, a1("", ""), "HIDDEN", "CRT");
setting_register("oldtvfilter_enabled", "All Effects", 1, a1("Off", "ON"), "HIDDEN", "CRT");

setting_register("scanline_enabled", "Scanlines", 1, a1("Off", "ON"), "HIDDEN", "CRT");
setting_register("scanline_magnetude", "--Magnitude", 5, a2(0, 1.0, 0.05), "HIDDEN", "CRT");

setting_register("television_enabled", "Screen", 1, a1("Off", "ON"), "HIDDEN", "CRT");
setting_register("television_sharpness", "--Sharpness", 10, a2(-1.0, 1.0, 0.05), "HIDDEN", "CRT");
setting_register("television_saturation", "--Saturation", 10, a2(0, 1.0, 0.05), "HIDDEN", "CRT");
setting_register("television_contrast", "--Contrast", 21, a2(-1.0, 1.0, 0.05), "HIDDEN", "CRT");
setting_register("television_brightness", "--Brightness", 20, a2(-1.0, 1.0, 0.05), "HIDDEN", "CRT");

setting_register("composite_enabled", "Composite", 1, a1("Off", "ON"), "HIDDEN", "CRT");
setting_register("composite_artifact", "--Artifact", 2, a2(0, 1.0, 0.05), "HIDDEN", "CRT");
setting_register("composite_fringing", "--Fringing", 8, a2(0, 1.0, 0.05), "HIDDEN", "CRT");
setting_register("composite_bleeding", "--Bleed", 18, a2(0, 1.0, 0.05), "HIDDEN", "CRT");
//setting_register("noise_magnetude", "Noise Magnitude", 9, a2(-1.0, 1.0, 0.1), "HIDDEN", "CRT");

setting_register("chromatic_enabled", "Chromatic Aberration", 1, a1("Off", "ON"), "HIDDEN", "CRT");
setting_register("chromatic_magnetude", "--Magnitude", 2, a2(0, 1.0, 0.05), "HIDDEN", "CRT");

setting_register("tube_enabled", "Tube", 0, a1("Off", "ON"), "HIDDEN", "CRT");
setting_register("tube_distortion", "--Distortion", 2, a2(0, 1.0, 0.05), "HIDDEN", "CRT");

/*var _amt = 15;
for(var j=0;j&lt;_amt;j++)
{
    setting_register("test"+string(j), "Test "+string(j), 1, a1("Disabled", "Enabled"));
}*/

settings_update();

print("SETTINGS COUNT: " + string(count));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if stat_get("FINISHED_GAME") and !setting_exists("oldmenu")
{
    setting_register("oldmenu", "Original Main Menu", 0, a1("Off", "On"));
    settings_update();
}*/


//////////////////////////////////////
//if !director.config_loaded then exit;


//////////////////////////////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
