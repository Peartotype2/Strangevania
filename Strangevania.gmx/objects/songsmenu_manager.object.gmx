<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>manager_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menumanager.menuEnabled = false;
back_pressed = false;
left_pressed = false;
right_pressed = false;
accept_pressed = false;

playing_wave = false;
playing_wave1 = "-_-";
playing_wave2 = "_-_";
playing_wave_delay = 10;
alarm[1] = playing_wave_delay;

songsList = musicmanager.allsongs_list;
songsCount = ds_list_size(songsList);

menu_alpha = 0;
menu_close = false;

canHold = true;
holdDelay = 5;

h_off = 8;
pos = 0;
_selected = false;

_hiddenoffset = 0;

page_offset = 0;
page_size = 6;//8;

pos_offset = 0;
pos_min = 0;
pos_max = page_size-1;

_w = 228//152;
_h = 8
_spacing = 4;

_w *= 4;
_h *= 4;
_spacing *= 4;

var _pad = 24;

surf_w = _w+_pad;
surf_h = (_h+_spacing)*(page_size+1)+(_spacing/2);

//surf_w = 624;
//surf_h = 320;

surf = surface_create(surf_w, surf_h);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playing_wave = !playing_wave;
alarm[1] = playing_wave_delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHold = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !menu_close
{
    var old_pos = pos;
    if inputmanager.up_held and canHold
    {
        pos--;
        if max(pos, 0) &lt; pos_min
        {
            pos_offset = max(0, pos-(page_size-1));
            page_offset--
            pos_max = (page_size-1)+page_offset;
            pos_min = pos_max-(page_size-1);
        }
        
        h_off = 8;
        canHold = false;
        alarm[0] = holdDelay;
    }
    
    if inputmanager.down_held and canHold
    {
        pos++;
        if min(pos, songsCount-1) &gt; pos_max
        {
            pos_offset = max(0, pos-(page_size-1));
            page_offset++
            pos_max = (page_size-1)+page_offset;
            pos_min = pos_max-(page_size-1);
        }
        
        h_off = 8;
        canHold = false;
        alarm[0] = holdDelay;
    }
    pos = clamp(pos, 0, songsCount-1);
    //pos_offset = max(0, pos-page_size);

    if inputmanager.up_released or inputmanager.down_released
    {
        alarm[0] = -1;
        canHold = true;
    }
    
    if old_pos != pos //If selected option changes
    {  
        audio_play_sound(snd_tick, 0, 0);
    }
    
    if inputmanager.menu.accept_press
    {
        accept_pressed = true;
        audio_play_sound(snd_select, 0, 0);
        
        if (stat_get(songsList[| pos]+"_HEARD") or musicmanager.showHiddenSongs)
        {
            var _sid = asset_get_index(songsList[| pos]);
            
            music_fade_to(_sid, 500)
        }
    }
    
    if inputmanager.menu.back_press or inputmanager.menu.escape_press
    {
        back_pressed = true;
    }

    if inputmanager.left_press then left_pressed = true;
    if inputmanager.right_press then right_pressed = true;
    
    if back_pressed
    {
        audio_play_sound(snd_select, 0, 0);
        menumanager.menu_level = menulevel.unlocks;
        menumanager.pos = 3;
        menumanager.menuEnabled = true;
        
        menu_close = true;
    }
    
    var _inc = 0.35;
    if menu_alpha &lt; 1 then menu_alpha += _inc;
    else menu_alpha = 1;
}
else
{// if menu_close
    var _inc = 0.35;
    if menu_alpha &gt; 0 then menu_alpha -= _inc;
    else
    {
        menu_alpha = 0;
        
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
draw_set_alpha(menu_alpha);
/*draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_text(viewx+20,viewy+20, "pos: " + string(pos));
draw_text(viewx+20,viewy+30, "pos_offset: " + string(pos_offset));
draw_text(viewx+20,viewy+40, "pos_min: " + string(pos_min));
draw_text(viewx+20,viewy+50, "pos_max: " + string(pos_max));
draw_text(viewx+20,viewy+60, "page_offset: " + string(page_offset));*/

draw_set_valign(fa_middle);
draw_set_halign(fa_center);

//var _spacing = 4;

var _id = 0;
var _x = surf_w/2//viewx+vieww/2;
var _y = _h+_spacing+8//surf_h/2//viewy+viewh/2;
var surf_x = (viewx+vieww/2)-surf_w/8;
var surf_y = (viewy+viewh/2)-16//-surf_h/12;
//var _w = 152;
//var _h = 8;

surface_set_target(surf);
draw_clear_alpha(c_black, 0)

/*draw_sprite_stretched_ext(spr_white_pixel, 0, 0, 0, surf_w, surf_h,
    c_dkgray, 0.65*menu_alpha);*/
    
var _lastoffset = 0;
if pos == (songsCount)
{
    _lastoffset = (_h+_spacing);
}
    
_yoff = 0;
var page_mult = (_h+_spacing)*page_offset+(_lastoffset);
//for(i=0;i&lt;stattracker.statCount+_countoffset-((stattracker.hiddenCount)*_hidmult);i++)
for(i=0;i&lt;songsCount;i++)
{
    _selected = false;
    if i == pos
    {
        _selected = true;
        //h_off += 1;
        //h_off = clamp(h_off, _h, _h*2);
    }
    music_draw_option(i, _x-(_w/2), _y-(_h/2)+_yoff-page_mult, _w, _h);
    _yoff += (_spacing+_h);
}

draw_set_valign(fa_middle);
draw_set_halign(fa_right);

surface_reset_target();
//var _bord = 4;
//draw_sprite_stretched_ext(spr_white_pixel, 0, (viewx+vieww/2)-(152/2)-_bord, (viewy+viewh/2)-16-_bord, 152+(_bord*2), 86+(_bord*2),
//    c_dkgray, 0.25*menu_alpha);
draw_surface_ext(surf, surf_x, surf_y, 0.25, 0.25, 0, c_white, 1);

//Draw back button prompt
var bp_scale = (1/16)*3;
draw_text_transformed_colour(viewx+vieww-22, viewy+viewh-12, "Back", 0.75, 0.75, 0,
    c_white, c_white, c_ltgray, c_ltgray, menu_alpha);
draw_sprite_ext(bp_back_lt, inputmanager.control_type, viewx+vieww-12, viewy+viewh-12,
    bp_scale, bp_scale, 0, c_white, menu_alpha);


//Reset draw values
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
